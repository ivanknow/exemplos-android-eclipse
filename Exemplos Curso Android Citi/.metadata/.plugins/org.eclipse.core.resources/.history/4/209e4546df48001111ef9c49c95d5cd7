package br.ufpe.cin.blog;


import java.util.ArrayList;


import br.ufpe.cin.modelo.ImageAdapter;
import br.ufpe.cin.modelo.ItemLista;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Gallery;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;

public class AppBlog extends Activity {
	
	Button btnTelaPostar,btnTelaArquivo,btnLimparBanco,
	btnInserirPost,btnCancelarInserirPost
	,btnListarPostCancelar,
	btnVoltarVerPost,btnComentar,btnVerComentario
	,btnInsrirComet,btnCancelInsertComent
	,btnCancelVerComent,btnComentarVerComent,btnProxComent,btnAntComent
	;
	
	EditText etTituloPost,etTextoPost,etAutorPost
	,etAutorComet,etTextoComent;
	
	ListView listaPost;
	ArrayAdapter<ItemLista> aPost;
	ArrayList<ItemLista> titulos;
	TextView numReg,
	tvTitulo,tvAutor,tvTexto,
	tvCometAutor,tvComenteTexto;
	ImageAdapter imagens;
	Gallery galeria;
	ImageView imagem;
	
	SQLiteDatabase banco;
	Cursor dados;
	
    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        criaBanco();
        carregaTelaPrincipal();
    }
    
    public void carregaTelaPrincipal(){
    	
    	setContentView(R.layout.main);
    	btnTelaPostar = (Button) findViewById(R.id.btnPostar);
    	btnTelaArquivo = (Button) findViewById(R.id.btnArquivo);
    	btnLimparBanco = (Button) findViewById(R.id.limparBanco);
    	
    	btnLimparBanco.setOnClickListener(new OnClickListener() {
			
			public void onClick(View v) {
				LimpaBanco();
			}
        });
    	
    	btnTelaPostar.setOnClickListener(new OnClickListener() {
			
			public void onClick(View v) {
				carregaTelaInserirPost();
			}
        });
    	
    	btnTelaArquivo.setOnClickListener(new OnClickListener() {
			
			public void onClick(View v) {
				carregaTelaListarPost();
			}
        });

    	
    }
  
 //tela de listar posts na list view   
 public void carregaTelaListarPost(){
    	
	 int num = contaPost();
	 if(num == 0){
		 Alerta("nenhum registro","Cadastre algum post antes de listar");
		 carregaTelaPrincipal();
	 }
	 else{
    	setContentView(R.layout.listar_post);
    	btnListarPostCancelar = (Button) findViewById(R.listarpost.cancelar);
    	listaPost = (ListView) findViewById(R.listarpost.lista);
    	numReg  = (TextView) findViewById(R.listarpost.numreg);
    	numReg.setText(num+" registro encontrados");
    	
    	titulos = getTitulosPost();
    	aPost = new ArrayAdapter<ItemLista>(AppBlog.this,android.R.layout.simple_list_item_1,titulos );
    	
    	listaPost.setAdapter(aPost);
    	
    	listaPost.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,
					long arg3) {
				//Alerta("",titulos.get(arg2).toString());
				carregaTelaVerPost(titulos.get(arg2).getId());
				
			}
		});
    	
    	btnListarPostCancelar.setOnClickListener(new OnClickListener() {
    		
    		public void onClick(View v) {
    			carregaTelaPrincipal();
    		}
        });
    	}
    	
    }
 
 //tela de inserir post   
 public void carregaTelaInserirPost(){
 	
 	setContentView(R.layout.inserir_post);
 	
 	btnInserirPost = (Button) findViewById(R.post.btnPostInserir);
 	btnCancelarInserirPost = (Button) findViewById(R.post.btnPostCalcelInserir);
 	etTituloPost = (EditText) findViewById(R.post.ETTitulo);
 	etTextoPost = (EditText) findViewById(R.post.ETTexto);
 	etAutorPost= (EditText) findViewById(R.post.ETautor);
 	galeria = (Gallery) findViewById(R.post.gallera);
 	
 	galeria.setAdapter(new ImageAdapter(AppBlog.this));
 	
 	btnCancelarInserirPost.setOnClickListener(new OnClickListener() {
		
		public void onClick(View v) {
			carregaTelaPrincipal();
		}
    });
	
 	btnInserirPost.setOnClickListener(new OnClickListener() {
		
		public void onClick(View v) {
			int idImagem =(Integer) galeria.getAdapter().getItem(galeria.getSelectedItemPosition());
			String titulo = etTituloPost.getText().toString();
			String texto = etTextoPost.getText().toString();
			String autor = etAutorPost.getText().toString();
			
			inserePost(titulo,texto,autor,idImagem);
			
			
		}
    });
 	
 	
 }
 
 //ver post individual
 public void carregaTelaVerPost(int id){
 	
	final int indPost = id;
 	setContentView(R.layout.ver_post);
 	carregaPost(id);
 	
 	btnVoltarVerPost = (Button) findViewById(R.verpost.btnVerPostVoltar);
 	btnComentar = (Button) findViewById(R.verpost.btnVerPostComentar);
 	btnVerComentario  = (Button) findViewById(R.verpost.btnVerPostComentarios);
 	btnVerComentario.setText("Comentarios("+contaComentario(id)+")");
 	
 	btnVoltarVerPost.setOnClickListener(new OnClickListener() {
		
		public void onClick(View v) {
			carregaTelaListarPost();
		}
    });
 	
btnComentar.setOnClickListener(new OnClickListener() {
		
		public void onClick(View v) {
			carregaTelaInserirrComentarios(indPost);
		}
    });
btnVerComentario.setOnClickListener(new OnClickListener() {
	
	public void onClick(View v) {
		carregaTelaVerComentarios(indPost);
	}
});
 	
 	
 }
 
 //ver comenttários
 public void carregaTelaVerComentarios(int idPost){
 	
	 if(contaComentario(idPost)<0){
		 
		 Alerta("Nenhum comentario cadastrado","");
		 carregaTelaVerPost(idPost);
	 }
	 else{
		 final int  id = idPost;
 	setContentView(R.layout.comentario);
 	btnCancelVerComent = (Button) findViewById(R.coment.Voltar);
 	btnComentarVerComent = (Button) findViewById(R.coment.Comentar);
 	btnProxComent = (Button) findViewById(R.coment.btnProx);
 	btnAntComent = (Button) findViewById(R.coment.btnAnt);
 	tvCometAutor= (TextView)findViewById(R.coment.tvAutor);
 	tvComenteTexto = (TextView)findViewById(R.coment.tvComent);
 	
 	try{
 		dados = banco.query("comentario",new String[]{"post_id","autor","texto"},"post_id = "+idPost,null,null,null,null);
 		dados.moveToFirst();
 		String texto = dados.getString(dados.getColumnIndex("texto"));
 		String autor = dados.getString(dados.getColumnIndex("autor"));
 		tvCometAutor.setText(autor);
		
		
 	
 	}
 	catch(Exception e){
 		
 		Alerta("erro",e.getMessage());
 	}
 	
 	
 	btnCancelVerComent.setOnClickListener(new OnClickListener() {
		
		public void onClick(View v) {
			carregaTelaVerPost(id);
		}
    });
 	
 	btnComentarVerComent.setOnClickListener(new OnClickListener() {
		
		public void onClick(View v) {
			carregaTelaInserirrComentarios(id);
		}
    });
	 
	 }
 	
 }
 
 //Inserir Comentarios
 public void carregaTelaInserirrComentarios(int idPost){
	 final int ind = idPost;
	 	setContentView(R.layout.inserir_comentario);
	 	btnInsrirComet = (Button) findViewById(R.insertComent.btnInserir);
	 	btnCancelInsertComent = (Button) findViewById(R.insertComent.btnCancelar);
	 	etAutorComet = (EditText) findViewById(R.insertComent.etAutor);
	 	etTextoComent = (EditText) findViewById(R.insertComent.etComentario);
	 	
	 	//insereComentario
	 	btnInsrirComet.setOnClickListener(new OnClickListener() {
			
			public void onClick(View v) {
				String autor = etAutorComet.getText().toString();
				String texto = etTextoComent.getText().toString();
				insereComentario(ind,texto,autor);
				
			}
	    });
	 	btnCancelInsertComent.setOnClickListener(new OnClickListener() {
			
			public void onClick(View v) {
				carregaTelaVerPost(ind);
			}
	    });
	 }
 
 //métodos de banco
 
 public void criaBanco(){
	 try{
	        banco = getApplicationContext().openOrCreateDatabase("bancoCadastro",MODE_PRIVATE,null);
	       // banco.execSQL("DROP TABLE tb_pessoa2");
	        banco.execSQL("CREATE TABLE IF NOT EXISTS post (  id int(11) PRIMARY KEY,  titulo varchar(200) NOT NULL, texto text NOT NULL,  autor varchar(200) NOT NULL,  foto int(20) NOT NULL)");
	        banco.execSQL("CREATE TABLE IF NOT EXISTS comentario (  post_id int(11) NOT NULL,  texto text NOT NULL,  autor varchar(200) NOT NULL)");
		        carregaTelaPrincipal();
	        }catch (Exception e){
	        	e.printStackTrace();
	        }
	 
 }

 public void inserePost(String titulo,String texto,String autor,int foto){
	 String comando = "INSERT INTO post VALUES("+contaPost()+",'"+titulo+"','"+texto+"','"+autor+"',"+foto+")";
	 try{
	 banco.execSQL(comando);
	 Alerta("Inserido","");
	 carregaTelaPrincipal();
	 }
	 catch(Exception e){
		 
		 Alerta("Erro",e.getLocalizedMessage());
	 }
	 
 }
 
 public void insereComentario(int post,String texto,String autor){
	 String comando = "INSERT INTO comentario VALUES("+post+",'"+texto+"','"+autor+"')";
	 try{
		 banco.execSQL(comando);
		 Alerta("Inserido","");
		 carregaTelaVerPost(post);
		 }
		 catch(Exception e){
			 
			 Alerta("Erro",e.getLocalizedMessage());
		 }
 }
 
 public int contaPost(){
	 int count = 0;
	 try{
 		dados = banco.query("post",new String[]{"titulo"},null,null,null,null,null);
 		count = dados.getCount();
 		
 	}
 	catch(Exception e){
 		Alerta("Erro",e.getMessage());
 		
 	}
	 return count;
	 
 }
 public int contaComentario(int post){
	 int count = 0;
	 try{
	 		dados = banco.query("comentario",new String[]{"post_id"},"post_id = "+post,null,null,null,null);
	 		count = dados.getCount();
	 	}
	 	catch(Exception e){
	 		
	 		Alerta("Erro",e.getMessage());
	 	}
	 return count;
	 
 }
 
 public void Alerta(String titulo,String texto){
	 AlertDialog.Builder dialogo = new Builder(AppBlog.this);
     dialogo.setTitle(titulo);
     dialogo.setMessage(texto);
     dialogo.setNeutralButton("Ok",null);
     dialogo.show();
	 
 }
 
 public ArrayList<ItemLista> getTitulosPost(){
	 ArrayList<ItemLista> titulos = new ArrayList<ItemLista>();
	 
	 try{
	dados = banco.query("post",(new String[]{"id","titulo"}),null,null,null,null,null);
	dados.moveToFirst();
		 
			 while(!dados.isAfterLast()){
			 String titulo = dados.getString(dados.getColumnIndex("titulo"));
			 int id = dados.getInt(dados.getColumnIndex("id"));
			 
			 titulos.add(new ItemLista(id,titulo));
			 dados.moveToNext();
			 }
			 
		 
	 }
	 catch(Exception e){
		 Alerta("fudeu",e.getMessage());
		 
	 }
	 return titulos;
	 
	 
 }
 
 public void carregaPost(int id){
	 tvTitulo = (TextView) findViewById(R.verpost.tvTitulo);
	 tvAutor = (TextView) findViewById(R.verpost.tvAutor);
	 tvTexto = (TextView) findViewById(R.verpost.tvTexto);
	 imagem = (ImageView)findViewById(R.verpost.image);
	 
	 try{
		 dados = banco.query("post",(new String[]{"id","titulo","texto","autor","foto"}),"id="+id,null,null,null,null);
			dados.moveToFirst();
				 
					
					 String titulo = dados.getString(dados.getColumnIndex("titulo"));
					 String autor = dados.getString(dados.getColumnIndex("autor"));
					 String texto = dados.getString(dados.getColumnIndex("texto"));
					 int foto = dados.getInt(dados.getColumnIndex("foto"));

		 tvTitulo.setText("titulo:"+titulo);
		 tvAutor.setText("autor:"+autor);	 
		 tvTexto.setText("texto:"+texto);
		 imagem.setImageResource(foto);
		 
	 }
	 catch(Exception e){
		 Alerta("Erro",e.getMessage());
	 }
	
	 
	 
 }
 
 public void carregaComentario(String autor,String texto){
	 etAutorComet.setText(autor);
	 etTextoComent.setText(texto);
 }
 
 public void LimpaBanco(){
	 String comando = "delete  from post; delete  from comentario";
	 try{
		 banco.execSQL(comando);
		 Alerta("limpo","");
		 carregaTelaPrincipal();
		 }
		 catch(Exception e){
			 
			 Alerta("Erro",e.getLocalizedMessage());
		 }
	 
 }

}
